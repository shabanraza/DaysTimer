/* eslint-disable */
import React, { PropTypes } from 'react';
import moment from 'moment';


const propTypes = {
    endDate: PropTypes.string.isRequired
};

class DaysTimer extends React.Component {

    constructor() {
        super();
        // set initial time:y

        this.state={
            days:0,
            hours:0,
            minutes:0,
            seconds:0,
            close:false
        };

    }

    componentDidMount() {
        // update time every second
        this.timer = setInterval(() => {
            this.renderMatchCounter();
        }, 1000);
    }

    componentWillUnmount() {
        window.clearInterval(this.timer);
    }

    renderMatchCounter() {

            let days, hours, minutes, seconds;
            let now = moment();
            //if we have to close 1 hour before endDate
            let endDate = moment(this.props.endDate);

            // let timer = setInterval(function(){
            //if now & endDate are same , means we have to close timer
            if(moment(now).isSame(endDate)){
                window.clearInterval(this.timer);
                this.setState({close:true});

            }
            if (moment(now).isBefore(endDate)) {
                let now = moment();
                let diff = moment.duration(moment(endDate).diff(moment(now)));
                days = parseInt(diff.asDays(),10);
                hours = parseInt(diff.asHours(),10) - days * 24;
                minutes = parseInt(diff.asMinutes(),10) - (days * 24 * 60 + hours * 60);
                seconds = parseInt(diff.asSeconds(),10) - (days * 24 * 60 * 60 + minutes * 60 + hours * 60 * 60);
                this.setState({
                    days:days,
                    hours:hours,
                    minutes:minutes,
                    seconds:seconds
                })
            }



    }

    render() {

        return (
            <div>
               <div className="timer-head" style={this.props.style.parentDiv}>
                    <div className="td-timer" style={this.props.style.value}>{this.state.days}  - Days</div>
                    <div className="td-timer" style={this.props.style.value}>{this.state.hours} - hours</div>
                    <div className="td-timer" style={this.props.style.value}>{this.state.minutes} - Min</div>
                    <div className="td-timer" style={this.props.style.value}>{this.state.seconds} - Sec</div>
                </div>
            </div>
        );
    }


}

DaysTimer.propTypes = propTypes;

export default DaysTimer;
